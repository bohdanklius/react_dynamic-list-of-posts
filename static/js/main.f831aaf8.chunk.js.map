{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","PostsList","setSelectedPostId","selectedPostId","userId","useState","userPosts","setUserPosts","useEffect","queryString","fetch","then","response","json","data","getUserPosts","result","className","map","post","key","id","title","type","onClick","NewCommentForm","postId","addComment","nameContent","setName","emailContent","setEmail","bodyContent","setBody","onSubmit","event","preventDefault","comment","createdComment","name","email","body","method","JSON","stringify","placeholder","value","onChange","target","PostDetails","setPost","comments","setComments","isCommentVisible","setIsCommentVisible","filter","getPostComments","handleDeleteComment","commentId","deleteComment","prevComments","length","App","setUserId","handleChangeSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f831aaf8.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ setSelectedPostId, selectedPostId, userId }) => {\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then((result) => {\n        setUserPosts(result);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {userPosts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n\n            {selectedPostId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId) {\n  const queryString = +userId === 0\n    ? `${BASE_URL}/posts/`\n    : `${BASE_URL}/posts?userId=${userId}`;\n\n  return fetch(queryString)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addNewComment } from '../../api/comments';\n\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [nameContent, setName] = useState('');\n  const [emailContent, setEmail] = useState('');\n  const [bodyContent, setBody] = useState('');\n\n  const addNameContent = (event) => {\n    setName(event.target.value);\n  };\n\n  const addEmailContent = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const addBodyContent = (event) => {\n    setBody(event.target.value);\n  };\n\n  const clearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const handleAddComment = (event) => {\n    event.preventDefault();\n\n    const createdComment = {\n      postId,\n      name: nameContent,\n      email: emailContent,\n      body: bodyContent,\n    };\n\n    addNewComment(createdComment)\n      .then(result => result.data);\n\n    addComment(createdComment);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleAddComment}\n      method=\"POST\"\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={nameContent}\n          onChange={addNameContent}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={emailContent}\n          onChange={addEmailContent}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={bodyContent}\n          onChange={addBodyContent}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments/`)\n    .then(response => response.json())\n    .then(\n      comments => comments.data.filter(comment => comment.postId === postId),\n    );\n}\n\nexport function addNewComment(comment) {\n  return fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId: comment.postId,\n      name: comment.name,\n      email: comment.email,\n      body: comment.body,\n    }),\n  })\n    .then(response => response.json());\n}\n\nexport function deleteComment(commentId) {\n  return fetch(\n    `${BASE_URL}/comments/${commentId}`, {\n      method: 'DELETE',\n    },\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState('');\n  const [comments, setComments] = useState('');\n  const [isCommentVisible, setIsCommentVisible] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(result => setPost(result));\n    getPostComments(selectedPostId)\n      .then(result => setComments(result));\n  }, [selectedPostId]);\n\n  const handleButton = () => {\n    setIsCommentVisible(!isCommentVisible);\n  };\n\n  const handleDeleteComment = (commentId) => {\n    deleteComment(commentId);\n\n    setComments(prevComments => prevComments.filter(\n      comment => comment.id !== commentId,\n    ));\n  };\n\n  const addComment = (comment) => {\n    setComments(prevComments => [...prevComments, comment]);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleButton}\n        >\n          {isCommentVisible\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {isCommentVisible\n          && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleDeleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const handleChangeSelect = (event) => {\n    setUserId(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={event => handleChangeSelect(event)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPostId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}